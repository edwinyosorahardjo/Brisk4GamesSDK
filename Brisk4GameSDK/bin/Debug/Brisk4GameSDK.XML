<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Brisk4GameSDK</name>
    </assembly>
    <members>
        <member name="T:Brisk4GameSDK.AssetManager">
            <summary>
            Provides methods to manage Game Assets
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            
            AuthToken token = null;
            Authorization auth = new Authorization();
            
            token = await auth.AuthenticateAsync(info);
            AssetManager assetManager = new AssetManager(token);
            </example>
        </member>
        <member name="M:Brisk4GameSDK.AssetManager.#ctor(Brisk4GameSDK.AuthToken)">
            <summary>
            Constructor method accepting a valid authentication token
            </summary>
            <param name="token">A valid authentication token</param>
        </member>
        <member name="M:Brisk4GameSDK.AssetManager.UploadFile(System.String,System.String,System.String)">
            <summary>
            Uploads a file to blob storage
            </summary>
            <param name="gameId">The game the asset should be associated with</param>
            <param name="localFilePath">The local system file path</param>
            <param name="mimeType">The file mime type</param>
            <returns><see cref="T:Task{String}"/></returns>
        </member>
        <member name="M:Brisk4GameSDK.AssetManager.GetFiles(System.String)">
            <summary>
            Retrieves <see cref="T:Brisk4GameSDK.Asset"/> associated with the authenticated user and the gameId
            </summary>
            <param name="gameId">The game the asset should be associated with</param>
            <see cref="T:Brisk4GameSDK.Asset">See Asset</see>
            <returns>An <see cref="T:IEnumerable{Asset}"/> in the appropriate blob storage file path</returns>
        </member>
        <member name="M:Brisk4GameSDK.AssetManager.DeleteFile(System.String,System.String)">
            <summary>
            Deletes an asset associated with the authenticated user 
            </summary>
            <param name="gameId">The game the asset should be associated with</param>
            <param name="filename">The name of the asset to delete</param>
            <returns><see cref="T:Task{String}"/></returns>
        </member>
        <member name="T:Brisk4GameSDK.Credentials">
            <summary>
            Holds the credentials to use when authenticating
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            </example>
        </member>
        <member name="P:Brisk4GameSDK.Credentials.Key">
            <summary>
            The authentication key
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.Credentials.Secret">
            <summary>
            The authentication secret
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="T:Brisk4GameSDK.AuthToken">
            <summary>
            Holds the token associated with the successful authentication
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            
            AuthToken token = null;
            Authorization auth = new Authorization();
            
            token = await auth.AuthenticateAsync(info);
            </example>
        </member>
        <member name="P:Brisk4GameSDK.AuthToken.Token">
            <summary>
            The authorization token
            </summary>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Brisk4GameSDK.Authorization">
            <summary>
            Supports Authoriziation for Brisk4Games
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            
            AuthToken token = null;
            Authorization auth = new Authorization();
            
            token = await auth.AuthenticateAsync(info);
            </example>
        </member>
        <member name="M:Brisk4GameSDK.Authorization.AuthenticateAsync(Brisk4GameSDK.Credentials)">
            <summary>
            Authenticate using the given credentials
            </summary>
            <param name="credentials">The credentials used to authenticate </param>
            <returns>The authenticated <see cref="T:Task{Brisk4GameSDK.AuthToken}"/> token</returns>
        </member>
        <member name="T:Brisk4GameSDK.ChurnManager">
            <summary>
            Retrieves user churn values
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            
            AuthToken token = null;
            Authorization auth = new Authorization();
            
            token = await auth.AuthenticateAsync(info);
            ChurnManager churnManager = new ChurnManager(token);
            </example>
        </member>
        <member name="M:Brisk4GameSDK.ChurnManager.#ctor(Brisk4GameSDK.AuthToken)">
            <summary>
            Constructor method accepting a valid authentication token
            </summary>
            <param name="token">A valid authentication token</param>
        </member>
        <member name="M:Brisk4GameSDK.ChurnManager.Get(System.String,System.String)">
            <summary>
            Returns the churn value for the given game and player id
            </summary>
            <param name="gameId">The game for which the churn value should be retrieved</param>
            <param name="playerId">The player for which the churn value should be retrieved</param>
            <returns>The churn value as a <see cref="T:Task{System.String}"/></returns>
        </member>
        <member name="T:Brisk4GameSDK.FriendLink">
            <summary>
            Encapsulates a relationship between two people and a game
            </summary>
            <example>
             var friend = new FriendLink()
                          {
                               GameId = "GameId",
                               PlayerId = "PlayerId",
                               FriendId = "FriendId"
                          }
            </example>
        </member>
        <member name="P:Brisk4GameSDK.FriendLink.PlayerId">
            <summary>
            The Id of the Player
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.FriendLink.FriendId">
            <summary>
            The Id of the Friend
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.FriendLink.GameId">
            <summary>
            The Id of the Game
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="T:Brisk4GameSDK.FriendManager">
            <summary>
            Manages Friend Relationships
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            
            AuthToken token = null;
            Authorization auth = new Authorization();
            
            token = await auth.AuthenticateAsync(info);
            FriendManager manager = new FriendManager(token);
            </example>
        </member>
        <member name="M:Brisk4GameSDK.FriendManager.#ctor(Brisk4GameSDK.AuthToken)">
            <summary>
            Constructor method accepting a valid authentication token
            </summary>
            <param name="token">A valid authentication token</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brisk4GameSDK.FriendManager.AddFriend(Brisk4GameSDK.FriendLink)" -->
        <!-- Badly formed XML comment ignored for member "M:Brisk4GameSDK.FriendManager.AddFriends(System.Collections.Generic.IEnumerable{Brisk4GameSDK.FriendLink})" -->
        <member name="M:Brisk4GameSDK.FriendManager.GetFriends(System.String,System.String)">
            <summary>
            Retrieves friends assoicated with the player and game
            </summary>
            <param name="gameId">The game associated with the player</param>
            <param name="playerId">The player whose friends should be retrieved</param>
            <returns>A list of friends associated with the game and player <see cref="!:List&lt;System.String&gt;"/></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brisk4GameSDK.FriendManager.DeleteFriend(Brisk4GameSDK.FriendLink)" -->
        <!-- Badly formed XML comment ignored for member "T:Brisk4GameSDK.Asset" -->
        <member name="P:Brisk4GameSDK.Asset.Filename">
            <summary>
            Gets the Filename
            </summary>
            <see cref="T:System.String"/>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.Asset.TenantName">
            <summary>
            Gets a TenantName
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.Asset.GameName">
            <summary>
            The name of the Game
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.Asset.UserName">
            <summary>
            The UserName associated with this Asset
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.Asset.CdnEndpoint">
            <summary>
            An endpoint location on the CDN for this asset
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="P:Brisk4GameSDK.Asset.RootContainer">
            <summary>
            The Root Container
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="M:Brisk4GameSDK.HttpHelper.Get(Brisk4GameSDK.AuthToken,System.String)">
            <summary>
            Helper method to invoke an endpoint using GET
            </summary>
            <param name="token">The authentication token</param>
            <param name="path">The endpoint to invoke</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Brisk4GameSDK.HttpHelper.UploadFile(Brisk4GameSDK.AuthToken,System.String,System.String,System.String)">
            <summary>
            Uploads a file to the specified endpoint
            </summary>
            <param name="token">The authentication token</param>
            <param name="path">The endpoint to invoke</param>
            <param name="filename">The local file system path to the file</param>
            <param name="contentType">The mime-type</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Brisk4GameSDK.HttpHelper.Post(Brisk4GameSDK.AuthToken,System.String)">
            <summary>
            Helper method to invoke an endpoint using POST
            </summary>
            <param name="token">The authenticationt token</param>
            <param name="path">The endpoint to invoke</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Brisk4GameSDK.HttpHelper.Post(Brisk4GameSDK.AuthToken,System.String,System.String)">
            <summary>
            Helper method to invoke an endpoint using POST
            </summary>
            <param name="token">The authenticationt token</param>
            <param name="path">The endpoint to invoke</param>
            <param name="body">The message body</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Brisk4GameSDK.HttpHelper.Delete(Brisk4GameSDK.AuthToken,System.String)">
            <summary>
            Helper method to invoke an endpoint using DELETE
            </summary>
            <param name="token">The authenticationt token</param>
            <param name="path">The endpoint to invoke</param>
            <returns>The result of the operation</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Brisk4GameSDK.LeaderboardEntry" -->
        <member name="P:Brisk4GameSDK.LeaderboardEntry.PlayerId">
            <summary>
            The players Id
            </summary>
            <returns><see cref="T:Task{System.String}"/></returns>
        </member>
        <member name="P:Brisk4GameSDK.LeaderboardEntry.Score">
            <summary>
            The players score
            </summary>
            <returns><see cref="T:Task{System.String}"/></returns>
        </member>
        <member name="T:Brisk4GameSDK.LeaderboardManager">
            <summary>
            Provides access to player leaderboards
            </summary>
            <example>
            Credentials info = new Credentials()
                               {
                                    Key = "username@b4gTenant.onmicrosoft.com",
                                    Secret = "Password"
                                };
            
            AuthToken token = null;
            Authorization auth = new Authorization();
            
            token = await auth.AuthenticateAsync(info);
            LeaderboardManager leaderboardManager = new LeaderboardManager(token);
            </example>
        </member>
        <member name="M:Brisk4GameSDK.LeaderboardManager.#ctor(Brisk4GameSDK.AuthToken)">
            <summary>
            Constructor method accepting a valid authentication token
            </summary>
            <param name="token">A valid authentication token</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brisk4GameSDK.LeaderboardManager.GetGameLeaderboard(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Brisk4GameSDK.LeaderboardManager.GetFriendLeaderboard(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Brisk4GameSDK.LeaderboardManager.GetCountryLeaderboard(System.String,System.String)" -->
    </members>
</doc>
